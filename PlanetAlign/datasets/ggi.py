from typing import Union, Optional
from pathlib import Path
import os
import torch

from PlanetAlign.data import Dataset
from .utils import download_file_from_google_drive


class GGI(Dataset):
    """A pair of networks synthesized from the human gene-gene interaction (PPI) network from
    `IsoBase <https://cb.csail.mit.edu/mna/isobase/>`_. Nodes represent human genes and edges represent gene-gene
    interactions. The two networks are noisy permutations of the original network generated by randomly inserting 10%
    edges (GGI1) and deleting 15% edges (GGI2) from the original network, respectively.
    There are in total 10,403 common nodes across two networks.

    .. list-table::
        :widths: 10 10 10 10 10
        :header-rows: 1

        * - Graph
          - #nodes
          - #edges
          - #node attrs
          - #edge attrs
        * - GGI1
          - 10,403
          - 130,868
          - 0
          - 0
        * - GGI2
          - 10,403
          - 100,603
          - 0
          - 0
    """
    def __init__(self,
                 root: Union[str, Path],
                 download: Optional[bool] = False,
                 train_ratio: Optional[float] = 0.2,
                 dtype: torch.dtype = torch.float32,
                 seed: Optional[int] = 0):

        if download:
            download_file_from_google_drive(
                remote_file_id='1BbnuLpo1gyiH1I7m1RNrRzjCwHv0C6aq',
                save_filename='GGI.pt',
                root=root)

        if not self._check_integrity(root):
            raise RuntimeError('PPI dataset not found or corrupted. You can use download=True to download it')

        super(GGI, self).__init__(root=root, name='GGI', train_ratio=train_ratio, dtype=dtype, seed=seed)

    def _check_integrity(self, root):
        return os.path.exists(os.path.join(root, 'GGI.pt'))
